// <auto-generated />
using System;
using BoutiqueApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BoutiqueApi.Migrations
{
    [DbContext(typeof(BoutiqueContext))]
    [Migration("20210703182234_seedData")]
    partial class seedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BoutiqueApi.Data.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TestBrand1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "TestBrand2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "TestBrand3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "TestBrand4"
                        });
                });

            modelBuilder.Entity("BoutiqueApi.Data.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "TestCategory1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "TestCategory2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "TestCategory3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "TestCategory4"
                        });
                });

            modelBuilder.Entity("BoutiqueApi.Data.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Key = "TestKey1",
                            Platform = "TestPlatform",
                            RecordDate = new DateTime(2021, 7, 3, 21, 22, 34, 287, DateTimeKind.Local).AddTicks(6250)
                        },
                        new
                        {
                            Id = 2,
                            Key = "TestKey2",
                            Platform = "TestPlatform",
                            RecordDate = new DateTime(2021, 7, 3, 21, 22, 34, 291, DateTimeKind.Local).AddTicks(1480)
                        });
                });

            modelBuilder.Entity("BoutiqueApi.Data.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Name = "TestImage2",
                            ProductId = 1,
                            Url = "TestLink"
                        },
                        new
                        {
                            Id = 3,
                            Name = "TestImage3",
                            ProductId = 2,
                            Url = "TestLink"
                        },
                        new
                        {
                            Id = 4,
                            Name = "TestImage2",
                            ProductId = 3,
                            Url = "TestLink"
                        },
                        new
                        {
                            Id = 5,
                            Name = "TestImage3",
                            ProductId = 4,
                            Url = "TestLink"
                        },
                        new
                        {
                            Id = 6,
                            Name = "TestImage2",
                            ProductId = 4,
                            Url = "TestLink"
                        },
                        new
                        {
                            Id = 7,
                            Name = "TestImage3",
                            ProductId = 5,
                            Url = "TestLink"
                        },
                        new
                        {
                            Id = 8,
                            Name = "TestImage3",
                            ProductId = 6,
                            Url = "TestLink"
                        },
                        new
                        {
                            Id = 9,
                            Name = "TestImage2",
                            ProductId = 7,
                            Url = "TestLink"
                        },
                        new
                        {
                            Id = 10,
                            Name = "TestImage3",
                            ProductId = 8,
                            Url = "TestLink"
                        },
                        new
                        {
                            Id = 11,
                            Name = "TestImage2",
                            ProductId = 9,
                            Url = "TestLink"
                        },
                        new
                        {
                            Id = 12,
                            Name = "TestImage3",
                            ProductId = 10,
                            Url = "TestLink"
                        },
                        new
                        {
                            Id = 13,
                            Name = "TestImage2",
                            ProductId = 11,
                            Url = "TestLink"
                        },
                        new
                        {
                            Id = 14,
                            Name = "TestImage3",
                            ProductId = 12,
                            Url = "TestLink"
                        });
                });

            modelBuilder.Entity("BoutiqueApi.Data.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Message = "Test Message",
                            RecordDate = new DateTime(2021, 7, 3, 21, 22, 34, 291, DateTimeKind.Local).AddTicks(2780),
                            Title = "Test Title"
                        },
                        new
                        {
                            Id = 2,
                            Message = "Test Message2",
                            RecordDate = new DateTime(2021, 7, 3, 21, 22, 34, 291, DateTimeKind.Local).AddTicks(3460),
                            Title = "Test Title"
                        });
                });

            modelBuilder.Entity("BoutiqueApi.Data.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BoutiqueApi.Data.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("BoutiqueApi.Data.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CampaignPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("CampaignStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MostSalesProduct")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "TestBrand1",
                            CampaignPrice = 0m,
                            CampaignStatus = false,
                            Category = "TestCategory1",
                            MostSalesProduct = true,
                            Name = "TestProduct1",
                            Price = 20m
                        },
                        new
                        {
                            Id = 2,
                            Brand = "TestBrand2",
                            CampaignPrice = 0m,
                            CampaignStatus = false,
                            Category = "TestCategory1",
                            MostSalesProduct = true,
                            Name = "TestProduct2",
                            Price = 20m
                        },
                        new
                        {
                            Id = 3,
                            Brand = "TestBrand",
                            CampaignPrice = 0m,
                            CampaignStatus = false,
                            Category = "TestCategory2",
                            MostSalesProduct = true,
                            Name = "TestProduct3",
                            Price = 20m
                        },
                        new
                        {
                            Id = 4,
                            Brand = "TestBrand3",
                            CampaignPrice = 0m,
                            CampaignStatus = false,
                            Category = "TestCategory3",
                            MostSalesProduct = true,
                            Name = "TestProduct4",
                            Price = 20m
                        },
                        new
                        {
                            Id = 5,
                            Brand = "TestBrand2",
                            CampaignPrice = 0m,
                            CampaignStatus = false,
                            Category = "TestCategory3",
                            MostSalesProduct = true,
                            Name = "TestProduct5",
                            Price = 20m
                        },
                        new
                        {
                            Id = 6,
                            Brand = "TestBrand3",
                            CampaignPrice = 10m,
                            CampaignStatus = true,
                            Category = "TestCategory3",
                            MostSalesProduct = true,
                            Name = "TestProduct6",
                            Price = 20m
                        },
                        new
                        {
                            Id = 7,
                            Brand = "TestBrand",
                            CampaignPrice = 10m,
                            CampaignStatus = true,
                            Category = "TestCategory2",
                            MostSalesProduct = true,
                            Name = "TestProduct7",
                            Price = 20m
                        },
                        new
                        {
                            Id = 8,
                            Brand = "TestBrand4",
                            CampaignPrice = 10m,
                            CampaignStatus = true,
                            Category = "TestCategory4",
                            MostSalesProduct = true,
                            Name = "TestProduct8",
                            Price = 20m
                        },
                        new
                        {
                            Id = 9,
                            Brand = "TestBrand3",
                            CampaignPrice = 10m,
                            CampaignStatus = true,
                            Category = "TestCategory2",
                            MostSalesProduct = true,
                            Name = "TestProduct9",
                            Price = 20m
                        },
                        new
                        {
                            Id = 10,
                            Brand = "TestBrand3",
                            CampaignPrice = 10m,
                            CampaignStatus = true,
                            Category = "TestCategory2",
                            MostSalesProduct = true,
                            Name = "TestProduct10",
                            Price = 20m
                        },
                        new
                        {
                            Id = 11,
                            Brand = "TestBrand4",
                            CampaignPrice = 10m,
                            CampaignStatus = true,
                            Category = "TestCategory4",
                            MostSalesProduct = true,
                            Name = "TestProduct11",
                            Price = 20m
                        },
                        new
                        {
                            Id = 12,
                            Brand = "TestBrand2",
                            CampaignPrice = 10m,
                            CampaignStatus = true,
                            Category = "TestCategory1",
                            MostSalesProduct = true,
                            Name = "TestProduct12",
                            Price = 20m
                        },
                        new
                        {
                            Id = 13,
                            Brand = "TestBrand1",
                            CampaignPrice = 10m,
                            CampaignStatus = true,
                            Category = "TestCategory1",
                            MostSalesProduct = true,
                            Name = "TestProduct13",
                            Price = 20m
                        });
                });

            modelBuilder.Entity("BoutiqueApi.Data.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "S",
                            ProductId = 1,
                            Stock = 5
                        },
                        new
                        {
                            Id = 2,
                            Name = "S",
                            ProductId = 2,
                            Stock = 5
                        },
                        new
                        {
                            Id = 3,
                            Name = "S",
                            ProductId = 3,
                            Stock = 5
                        },
                        new
                        {
                            Id = 4,
                            Name = "S",
                            ProductId = 4,
                            Stock = 5
                        },
                        new
                        {
                            Id = 5,
                            Name = "S",
                            ProductId = 5,
                            Stock = 5
                        },
                        new
                        {
                            Id = 6,
                            Name = "S",
                            ProductId = 6,
                            Stock = 5
                        },
                        new
                        {
                            Id = 7,
                            Name = "S",
                            ProductId = 7,
                            Stock = 5
                        },
                        new
                        {
                            Id = 8,
                            Name = "S",
                            ProductId = 8,
                            Stock = 5
                        },
                        new
                        {
                            Id = 9,
                            Name = "S",
                            ProductId = 9,
                            Stock = 5
                        },
                        new
                        {
                            Id = 10,
                            Name = "S",
                            ProductId = 10,
                            Stock = 5
                        },
                        new
                        {
                            Id = 11,
                            Name = "S",
                            ProductId = 11,
                            Stock = 5
                        },
                        new
                        {
                            Id = 12,
                            Name = "S",
                            ProductId = 12,
                            Stock = 5
                        });
                });

            modelBuilder.Entity("BoutiqueApi.Data.Image", b =>
                {
                    b.HasOne("BoutiqueApi.Data.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BoutiqueApi.Data.OrderDetail", b =>
                {
                    b.HasOne("BoutiqueApi.Data.Order", "Order")
                        .WithMany("OrderDetail")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoutiqueApi.Data.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BoutiqueApi.Data.Size", b =>
                {
                    b.HasOne("BoutiqueApi.Data.Product", "Product")
                        .WithMany("Sizes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BoutiqueApi.Data.Order", b =>
                {
                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("BoutiqueApi.Data.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Sizes");
                });
#pragma warning restore 612, 618
        }
    }
}
